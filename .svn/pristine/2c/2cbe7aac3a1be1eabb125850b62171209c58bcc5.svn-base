package com.liuzhuni.lzn.core.personInfo;

import android.content.Intent;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore;
import android.view.View;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.android.volley.toolbox.ImageLoader;
import com.android.volley.toolbox.NetworkImageView;
import com.lidroid.xutils.ViewUtils;
import com.lidroid.xutils.view.annotation.ViewInject;
import com.lidroid.xutils.view.annotation.event.OnClick;
import com.liuzhuni.lzn.R;
import com.liuzhuni.lzn.base.Base2Activity;
import com.liuzhuni.lzn.config.Check;
import com.liuzhuni.lzn.core.personInfo.ui.PicDialog;
import com.liuzhuni.lzn.utils.PreferencesUtils;
import com.liuzhuni.lzn.utils.TextModify;
import com.liuzhuni.lzn.volley.RequestManager;

import java.io.File;

public class DetailInfoActivity extends Base2Activity {


    @ViewInject(R.id.title_left)
    private TextView mBackTv;
    @ViewInject(R.id.title_right)
    private TextView mRightTv;
    @ViewInject(R.id.title_middle)
    private TextView mMiddleTv;
    @ViewInject(R.id.nickname_detail)
    private TextView mNicknameTv;
    @ViewInject(R.id.tel_detail)
    private TextView mTelTv;
    @ViewInject(R.id.email_detail)
    private TextView mEmailTv;
    @ViewInject(R.id.adress_detail)
    private TextView mAdressTv;
    @ViewInject(R.id.head_detail_iv)
    private NetworkImageView mHeadIv;
    @ViewInject(R.id.detail_head_rl)
    private RelativeLayout mHeadRl;
    @ViewInject(R.id.detail_nickname_rl)
    private RelativeLayout mNickNameRl;
    @ViewInject(R.id.detail_tel_rl)
    private RelativeLayout mTelRl;

    private ImageLoader mImageLoader;

    private PicDialog mDialog;

    private static final int PHOTO_REQUEST_CAMERA = 1;// 拍照
    private static final int PHOTO_REQUEST_GALLERY = 2;// 从相册中选择
    private static final int PHOTO_REQUEST_CUT = 3;// 结果

    private static final String PHOTO_FILE_NAME = "temp_photo.jpg";

    private Bitmap bitmap=null;
    private File tempFile;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_detail_info);
        initData();
        findViewById();
        initUI();
        setListener();
    }

    @Override
    protected void initData() {

        mImageLoader = RequestManager.getImageLoader();

    }

    @Override
    protected void findViewById() {
        ViewUtils.inject(this);

    }


    @Override
    protected void onResume() {
        super.onResume();

        mHeadIv.setDefaultImageResId(R.drawable.my_touxiang);
        if (Check.hashead(this)) {

            mHeadIv.setImageUrl(PreferencesUtils.getValueFromSPMap(this, PreferencesUtils.Keys.HEAD_URL,"",PreferencesUtils.Keys.USERINFO), mImageLoader);
            mHeadIv.setErrorImageResId(R.drawable.my_touxiang);
        }

        if (Check.hasNickname(this)) {
            mNicknameTv.setText(PreferencesUtils.getValueFromSPMap(this, PreferencesUtils.Keys.NICKNAME,"",PreferencesUtils.Keys.USERINFO));
        } else {
            mNicknameTv.setText(getResources().getText(R.string.no_nickname));
        }

        if (Check.hasTel(this)) {

            mTelTv.setText(TextModify.getInstance().mobileAdjust(PreferencesUtils.getValueFromSPMap(this, PreferencesUtils.Keys.TEL,"",PreferencesUtils.Keys.USERINFO)));
        } else {
            mTelTv.setText(getResources().getText(R.string.no_tel));
        }
    }

    @Override
    protected void initUI() {

        mMiddleTv.setText(getResources().getString(R.string.me_info));
        mRightTv.setVisibility(View.GONE);


    }

    @Override
    protected void setListener() {

    }


    @OnClick(R.id.title_left)
    public void back(View v) {

        finish();
    }

    @OnClick(R.id.detail_head_rl)
    public void head(View v) {
        //传头像
        showDialog();
    }

    protected void showDialog(){

        mDialog=new PicDialog(this,null,null,null);

        mDialog.mItemOne.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                gallery();
                mDialog.dismiss();
            }
        });

        mDialog.mItemTwo.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                camera();
                mDialog.dismiss();
            }
        });

        mDialog.show();



    }

    @OnClick(R.id.detail_nickname_rl)
    public void nickName(View v) {
    //昵称

        if(!Check.hasNickname(this)){

            Intent intent=new Intent(this, NicknameActivity.class);
            startActivity(intent);
        }
    }

    @OnClick(R.id.detail_tel_rl)
    public void tel(View v) {

        //手机号
        if(!Check.hasTel(this)){
            Intent intent=new Intent(this, BindTelActivity.class);
            startActivity(intent);

        }
    }


    /*
	 * 从相册获取
	 */
    public void gallery() {
        // 激活系统图库，选择一张图片
        Intent intent = new Intent(Intent.ACTION_PICK);
        intent.setType("image/*");
        startActivityForResult(intent, PHOTO_REQUEST_GALLERY);
    }

    /*
     * 从相机获取
     */
    public void camera() {
        Intent intent = new Intent("android.media.action.IMAGE_CAPTURE");
        // 判断存储卡是否可以用，可用进行存储,将拍照后的照片存入文件
        if (hasSdcard()) {
            intent.putExtra(MediaStore.EXTRA_OUTPUT,
                    Uri.fromFile(new File(Environment
                            .getExternalStorageDirectory(), PHOTO_FILE_NAME)));
        }
        startActivityForResult(intent, PHOTO_REQUEST_CAMERA);
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == PHOTO_REQUEST_GALLERY) {
            if (data != null) {
                // intent pick返回选中的图片,uri得到图片的全路径
                Uri uri = data.getData();
                crop(uri);
            }

        } else if (requestCode == PHOTO_REQUEST_CAMERA) {
            if (hasSdcard()) {
                tempFile = new File(Environment.getExternalStorageDirectory(),
                        PHOTO_FILE_NAME);
                crop(Uri.fromFile(tempFile));
            } else {
//                Toast.makeText(this, "未找到存储卡，无法存储照片！", 0).show();
            }

        } else if (requestCode == PHOTO_REQUEST_CUT) {
            try {
                bitmap = data.getParcelableExtra("data");
                this.mHeadIv.setImageBitmap(bitmap);
                boolean delete = tempFile.delete();
                System.out.println("delete = " + delete);

            } catch (Exception e) {
                e.printStackTrace();
            }

        }

        super.onActivityResult(requestCode, resultCode, data);
    }

    /**
     * 裁剪图片
     *
     * @param uri
     */
    private void crop(Uri uri) {
        // 裁剪图片意图
        Intent intent = new Intent("com.android.camera.action.CROP");
        intent.setDataAndType(uri, "image/*");
        intent.putExtra("crop", "true");
        // 裁剪框的比例，1：1
        intent.putExtra("aspectX", 1);
        intent.putExtra("aspectY", 1);
        // 裁剪后输出图片的尺寸大小
        intent.putExtra("outputX", 200);
        intent.putExtra("outputY", 200);
        // 图片格式
        intent.putExtra("outputFormat", "JPEG");
        intent.putExtra("noFaceDetection", true);// 取消人脸识别
        intent.putExtra("return-data", true);// true:不返回uri，false：返回uri
        startActivityForResult(intent, PHOTO_REQUEST_CUT);
    }

    private boolean hasSdcard() {
        if (Environment.getExternalStorageState().equals(
                Environment.MEDIA_MOUNTED)) {
            return true;
        } else {
            return false;
        }
    }



}
