package com.liuzhuni.lzn.core.buylist.fragment;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ListView;
import android.widget.TextView;

import com.android.volley.Request;
import com.android.volley.Response;
import com.google.gson.reflect.TypeToken;
import com.liuzhuni.lzn.R;
import com.liuzhuni.lzn.base.BaseFragment;
import com.liuzhuni.lzn.config.UrlConfig;
import com.liuzhuni.lzn.core.buylist.adapter.FinishAdapter;
import com.liuzhuni.lzn.core.buylist.model.BuyListModel;
import com.liuzhuni.lzn.core.model.BaseListModel;
import com.liuzhuni.lzn.volley.GsonBaseRequest;

import java.util.ArrayList;
import java.util.List;

/**
 * Created by Andrew Lee on 2015/4/23.
 * E-mail:jieooo7@163.com
 * Date: 2015-04-23
 * Time: 11:24
 */
public class FragmentFinish extends BaseFragment {


    private List<BuyListModel> mList;
    private List<BuyListModel> mCurrentList;
    private TextView mNoContent;
    private FinishAdapter mAdapter;

    private int mTotal=1;
    private int mIndex=0;

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_finish,
                container, false);

        mNoContent=(TextView)view.findViewById(R.id.finish_no_content);

        initData(view);


        return view;
    }

    protected void initData(View view){



        mList=new ArrayList<BuyListModel>();

        ListView lv=(ListView)view.findViewById(R.id.fragment_finsh_list);
        mAdapter=new FinishAdapter(getActivity(),mList);
        lv.setAdapter(mAdapter);

        if(mIndex<mTotal){
            pullData(mIndex,1);
        }


    }


    protected synchronized void pullData(final int id,final int type){
        executeRequest(new GsonBaseRequest<BaseListModel<BuyListModel>>(Request.Method.GET, UrlConfig.WANT_BUY+id+"?t="+type,new TypeToken<BaseListModel<BuyListModel>>(){}.getType(),responseListener(),errorListener()){

        });
    }

    private Response.Listener<BaseListModel<BuyListModel>> responseListener() {
        return new Response.Listener<BaseListModel<BuyListModel>>(){
            @Override
            public void onResponse(BaseListModel<BuyListModel> indexBuyListModel) {

                if(indexBuyListModel.getRet()==0){
                    mTotal=indexBuyListModel.getTotalpage();
                    mIndex=indexBuyListModel.getPageIndex();
                    if(indexBuyListModel.getData()!=null){
                        mCurrentList=indexBuyListModel.getData();
                        mList.addAll(0,mCurrentList);
                        mAdapter.notifyDataSetChanged();

                    }
                }
                if(mList.size()<1){

                    mNoContent.setVisibility(View.VISIBLE);

                }else{
                    mNoContent.setVisibility(View.GONE);
                }
            }

        };

    }
}


